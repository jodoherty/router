---

- name: Network configuration
  hosts: routers
  become: true
  handlers:
    - name: Restart systemd-networkd
      ansible.builtin.systemd_service:
        name: systemd-networkd
        state: restarted

  tasks:
    - name: Install networking tools
      ansible.builtin.apt:
        pkg:
        - systemd-resolved
        state: present

    - name: Configure hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      when: hostname is defined

    - name: Configure wan_interface
      ansible.builtin.template:
        src: templates/wan.network
        dest: /etc/systemd/network/wan.network
        owner: root
        group: root
        mode: 0644
      notify: Restart systemd-networkd

    - name: Configure lan_interface
      ansible.builtin.template:
        src: templates/lan.network
        dest: /etc/systemd/network/lan.network
        owner: root
        group: root
        mode: 0644
      notify: Restart systemd-networkd

    - name: Enable systemd-networkd
      ansible.builtin.systemd_service:
        name: systemd-networkd
        state: started
        enabled: true

    - name: Enable systemd-resolved
      ansible.builtin.systemd_service:
        name: systemd-resolved
        state: started
        enabled: true

    - name: Configure stub resolv.conf
      ansible.builtin.file:
        src: /run/systemd/resolve/stub-resolv.conf
        dest: /etc/resolv.conf
        state: link
        force: yes

- name: VPN setup
  hosts: routers
  become: true
  handlers:
    - name: Restart wireguard
      ansible.builtin.systemd_service:
        name: 'wg-quick@{{ wg_interface }}'
        state: restarted
  tasks:
    - name: Configure wireguard
      ansible.builtin.copy:
        dest: /etc/wireguard/{{ wg_interface }}.conf
        content: |
          {{ wg_config }}
        owner: root
        group: root
        mode: '0600'
      notify: Restart wireguard

    - name: Enable wireguard
      ansible.builtin.systemd_service:
        name: 'wg-quick@{{ wg_interface }}'
        state: started
        enabled: true


- name: Firewall and forwarding setup
  hosts: routers
  become: true
  handlers:
    - name: Reload sysctl
      ansible.builtin.command:
        cmd: sysctl --system

    - name: Restart nftables
      ansible.builtin.systemd_service:
        name: nftables
        state: restarted
  tasks:
    - name: Enable IP Forwarding
      ansible.builtin.copy:
        dest: /etc/sysctl.d/forwarding.conf
        content: |
          net.ipv4.ip_forward = 1
          net.ipv6.conf.all.forwarding = 1
        owner: root
        group: root
        mode: '0644'
      notify: Reload sysctl

    - name: Configure firewall
      ansible.builtin.template:
        src: templates/nftables.conf.j2
        dest: /etc/nftables.conf
        owner: root
        group: root
        mode: '0755'
      notify: Restart nftables

    - name: Enable nftables
      ansible.builtin.systemd_service:
        name: nftables
        state: started
        enabled: true

- name: DNS Server
  hosts: routers
  become: true
  handlers:
    - name: Restart unbound
      ansible.builtin.systemd_service:
        name: unbound
        state: restarted

  tasks:
    - name: Install DNS packages
      ansible.builtin.apt:
        pkg:
        - unbound
        - unbound-anchor
        - bind9-utils
        - bind9-dnsutils
        state: present

    - name: Configure unbound
      ansible.builtin.copy:
        dest: /etc/unbound/unbound.conf.d/local-dns-server.conf
        content: |
          server:
            interface: {{ lan_interface }}@53
            interface: {{ wg_ip4_address | ansible.utils.ipaddr("address") }}@53
            interface: {{ wg_ip6_address | ansible.utils.ipaddr("address") }}@53
            ip-freebind: yes
            access-control: 0.0.0.0/0 allow
            access-control: ::/0 allow
        mode: '0644'
        owner: root
        group: root
      notify: Restart unbound

    - name: Enable unbound
      ansible.builtin.systemd_service:
        name: unbound
        state: started
        enabled: true

    - name: Disable unbound-resolvconf
      ansible.builtin.systemd_service:
        name: unbound-resolvconf
        state: stopped
        enabled: false


- name: Dynamic DNS setup
  hosts: routers
  become: true
  tasks:
    - name: Install packages
      ansible.builtin.apt:
        pkg:
        - python3-boto3
        - networkd-dispatcher
        state: present

    - name: Add Route53 DNS update configuration file
      ansible.builtin.copy:
        dest: /etc/route53_dyndns.json
        content: '{{ update_route53_config }}'
        owner: root
        group: root
        mode: '0600'

    - name: Add script to update Route53 DNS
      ansible.builtin.copy:
        dest: /usr/local/bin/update_route53
        src: scripts/update_route53
        owner: root
        group: root
        mode: '0755'

    - name: Ensure networkd-dispatcher hook directory is present
      ansible.builtin.file:
        path: /etc/networkd-dispatcher/configured.d
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Add networkd-dispatcher hook to call Route53 update script
      ansible.builtin.template:
        src: templates/network_configured
        dest: /etc/networkd-dispatcher/configured.d/network_configured
        owner: root
        group: root
        mode: 0755

    - name: Enable networkd-dispatcher
      ansible.builtin.systemd_service:
        name: networkd-dispatcher
        state: started
        enabled: true

