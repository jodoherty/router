---

- name: networking
  hosts: routers
  become: true
  handlers:
    - name: Restart networking
      ansible.builtin.systemd_service:
        name: networking
        state: restarted

    - name: Reload sysctl
      ansible.builtin.command:
        cmd: sysctl --system

    - name: Restart nftables
      ansible.builtin.systemd_service:
        name: nftables
        state: restarted

  tasks:
    - name: Install networking tools
      ansible.builtin.apt:
        pkg:
        - ca-certificates
        - curl
        - bridge-utils
        - resolvconf
        - isc-dhcp-client
        - ipv6calc
        - net-tools
        - ethtool
        - nftables
        - tang
        state: present

    - name: Configure hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      when: hostname is defined

    - name: Add isc-dhcp-client prefix delegation hook
      ansible.builtin.template:
        src: templates/prefix_delegation.j2
        dest: /etc/dhcp/dhclient-exit-hooks.d/prefix_delegation
        owner: root
        group: root
        mode: '0755'
      notify: Restart networking

    - name: Configure interfaces
      ansible.builtin.template:
        src: templates/interfaces.j2
        dest: /etc/network/interfaces
        owner: root
        group: root
        mode: '0644'
      notify: Restart networking

    - name: Enable IP Forwarding
      ansible.builtin.copy:
        dest: /etc/sysctl.d/forwarding.conf
        content: |
          net.ipv4.ip_forward = 1
          net.ipv6.conf.all.forwarding = 1
        owner: root
        group: root
        mode: '0644'
      notify: Reload sysctl

    - name: Configure firewall
      ansible.builtin.template:
        src: templates/nftables.conf.j2
        dest: /etc/nftables.conf
        owner: root
        group: root
        mode: '0755'
      notify: Restart nftables

    - name: Enable nftables
      ansible.builtin.systemd_service:
        name: nftables
        state: started
        enabled: true

- name: DNS Server
  hosts: routers
  become: true
  handlers:
    - name: Restart unbound
      ansible.builtin.systemd_service:
        name: unbound
        state: restarted

  tasks:
    - name: Install DNS packages
      ansible.builtin.apt:
        pkg:
        - unbound
        - unbound-anchor
        - bind9-utils
        - bind9-dnsutils
        state: present

    - name: Configure unbound
      ansible.builtin.copy:
        dest: /etc/unbound/unbound.conf.d/local-dns-server.conf
        content: |
          server:
            interface: lo@53
            interface: {{ lan_bridge }}@53
            {% if management_interface is defined -%}
            interface: {{ management_interface }}@53
            {%- endif %}
            access-control: {{ address | ansible.utils.ipaddr("network/prefix") }} allow
            {% if management_address is defined -%}
            access-control: {{ management_address | ansible.utils.ipaddr("network/prefix") }} allow
            {%- endif %}
            access-control: fd00::/8 allow
            access-control: fe80::/10 allow
        mode: '0644'
        owner: root
        group: root
      notify: Restart unbound

    - name: Enable unbound
      ansible.builtin.systemd_service:
        name: unbound
        state: started
        enabled: true

- name: DHCP Server
  hosts: routers
  become: true
  handlers:
    - name: Restart isc-dhcp-server
      ansible.builtin.systemd_service:
        name: isc-dhcp-server
        state: restarted
  tasks:
    - name: Install isc-dhcp-server
      ansible.builtin.apt:
        pkg: isc-dhcp-server
        state: present

    - name: Enable DHCP server on {{ lan_bridge }}
      ansible.builtin.lineinfile:
        path: /etc/default/isc-dhcp-server
        regexp: '^INTERFACESv4='
        line: 'INTERFACESv4="{{ lan_bridge }}"'
      notify: Restart isc-dhcp-server

    - name: Set domain name
      ansible.builtin.lineinfile:
        path: /etc/dhcp/dhcpd.conf
        regexp: '^option domain-name '
        line: 'option domain-name "{{ domain }}";'
      notify: Restart isc-dhcp-server

    - name: Set DHCP DNS servers
      ansible.builtin.lineinfile:
        path: /etc/dhcp/dhcpd.conf
        regexp: '^option domain-name-servers '
        line: 'option domain-name-servers {{ address | ansible.utils.ipaddr("address") }};'
      notify: Restart isc-dhcp-server

    - name: Configure DHCP subnet
      ansible.builtin.blockinfile:
        path: /etc/dhcp/dhcpd.conf
        content: |
          authoritative;

          subnet {{ address | ansible.utils.ipaddr('network') }} netmask {{ address | ansible.utils.ipaddr('netmask') }} {
            range {{ dhcp_range_start }} {{ dhcp_range_end }};
            option routers {{ address | ansible.utils.ipaddr('address') }};
          }

          {% for host in dhcp_reservations %}
          host {{ host.name }} {
            hardware ethernet {{ host.mac }};
            fixed-address {{ host.address | ansible.utils.ipv4('address') }};
          }
          {% endfor %}
      notify: Restart isc-dhcp-server

    - name: Enable isc-dhcp-server
      ansible.builtin.systemd_service:
        name: isc-dhcp-server
        state: started
        enabled: true


- name: radvd
  hosts: routers
  become: true
  handlers:
    - name: Restart radvd
      ansible.builtin.systemd_service:
        name: radvd
        state: restarted

  tasks:
    - name: Install radvd
      ansible.builtin.apt:
        pkg: radvd
        state: present

    - name: Configure radvd
      ansible.builtin.copy:
        dest: /etc/radvd.conf
        content: |
          interface br0 {
            AdvSendAdvert on;
            MinRtrAdvInterval 3;
            MaxRtrAdvInterval 10;
            prefix ::/64 {
              AdvOnLink on;
              AdvAutonomous on;
              AdvRouterAddr on;
              AdvValidLifetime 3600;
              AdvPreferredLifetime 3600;
            };
          };
        owner: root
        group: root
        mode: '0644'
      notify: Restart radvd

    - name: Enable radvd
      ansible.builtin.systemd_service:
        name: radvd
        state: started
        enabled: true
